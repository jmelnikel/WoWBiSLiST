{"ast":null,"code":"// import axios from 'axios';\n// import env from 'react-dotenv';\nconst getAuthToken = async baseUrl => {\n  try {\n    // return await axios.get(baseUrl);\n    passport.use(new BnetStrategy({\n      clientID: BNET_ID,\n      clientSecret: BNET_SECRET,\n      callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n      region: \"us\"\n    }, function (accessToken, refreshToken, profile, done) {\n      return done(null, profile);\n    }));\n  } catch (error) {\n    if (error.response) {\n      throw new Error(`HTTP error! response status: ${error.response.status}`);\n    } else if (error.request) {\n      throw new Error(`HTTP error! request: ${error.request}`);\n    } else {\n      throw new Error(`HTTP error! ${error.message}`);\n    }\n  }\n};\n\nexport default getAuthToken; // import passport from 'passport';\n// const BnetStrategy = require('passport-bnet').Strategy;\n// const bodyParser = require(\"body-parser\");\n// const cors = require(\"cors\");\n// const BNET_ID = env.BNET_ID;\n// const BNET_SECRET = env.BNET_SECRET;\n// passport.use(new BnetStrategy({\n//   clientID: BNET_ID,\n//   clientSecret: BNET_SECRET,\n//   callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n//   region: \"us\"\n// }, function(accessToken, refreshToken, profile, done) {\n//   return done(null, profile);\n// }));\n// app.get('/auth/bnet',\n//   passport.authenticate('bnet'));\n// app.get('/auth/bnet/callback',\n//   passport.authenticate('bnet', { failureRedirect: '/' }),\n//   function(req, res) {\n//     res.redirect('/');\n//   });","map":{"version":3,"sources":["/Users/jm-laptop/Documents/Portfolio/wowbislist/src/api/OAuth.js"],"names":["getAuthToken","baseUrl","passport","use","BnetStrategy","clientID","BNET_ID","clientSecret","BNET_SECRET","callbackURL","region","accessToken","refreshToken","profile","done","error","response","Error","status","request","message"],"mappings":"AAAA;AACA;AAEA,MAAMA,YAAY,GAAG,MAAOC,OAAP,IAAmB;AACtC,MAAI;AACF;AACAC,IAAAA,QAAQ,CAACC,GAAT,CAAa,IAAIC,YAAJ,CAAiB;AAC5BC,MAAAA,QAAQ,EAAEC,OADkB;AAE5BC,MAAAA,YAAY,EAAEC,WAFc;AAG5BC,MAAAA,WAAW,EAAE,2CAHe;AAI5BC,MAAAA,MAAM,EAAE;AAJoB,KAAjB,EAKV,UAASC,WAAT,EAAsBC,YAAtB,EAAoCC,OAApC,EAA6CC,IAA7C,EAAmD;AACpD,aAAOA,IAAI,CAAC,IAAD,EAAOD,OAAP,CAAX;AACD,KAPY,CAAb;AAQD,GAVD,CAUE,OAAOE,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAM,IAAIC,KAAJ,CAAW,gCAA+BF,KAAK,CAACC,QAAN,CAAeE,MAAO,EAAhE,CAAN;AACD,KAFD,MAEO,IAAIH,KAAK,CAACI,OAAV,EAAmB;AACxB,YAAM,IAAIF,KAAJ,CAAW,wBAAuBF,KAAK,CAACI,OAAQ,EAAhD,CAAN;AACD,KAFM,MAEA;AACL,YAAM,IAAIF,KAAJ,CAAW,eAAcF,KAAK,CAACK,OAAQ,EAAvC,CAAN;AACD;AACF;AACF,CApBD;;AAsBA,eAAepB,YAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import axios from 'axios';\n// import env from 'react-dotenv';\n\nconst getAuthToken = async (baseUrl) => {\n  try {\n    // return await axios.get(baseUrl);\n    passport.use(new BnetStrategy({\n      clientID: BNET_ID,\n      clientSecret: BNET_SECRET,\n      callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n      region: \"us\"\n    }, function(accessToken, refreshToken, profile, done) {\n      return done(null, profile);\n    }));\n  } catch (error) {\n    if (error.response) {\n      throw new Error(`HTTP error! response status: ${error.response.status}`);\n    } else if (error.request) {\n      throw new Error(`HTTP error! request: ${error.request}`);\n    } else {\n      throw new Error(`HTTP error! ${error.message}`);\n    }\n  }\n};\n\nexport default getAuthToken;\n\n\n// import passport from 'passport';\n// const BnetStrategy = require('passport-bnet').Strategy;\n// const bodyParser = require(\"body-parser\");\n// const cors = require(\"cors\");\n// const BNET_ID = env.BNET_ID;\n// const BNET_SECRET = env.BNET_SECRET;\n\n// passport.use(new BnetStrategy({\n//   clientID: BNET_ID,\n//   clientSecret: BNET_SECRET,\n//   callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n//   region: \"us\"\n// }, function(accessToken, refreshToken, profile, done) {\n//   return done(null, profile);\n// }));\n\n\n\n// app.get('/auth/bnet',\n//   passport.authenticate('bnet'));\n\n// app.get('/auth/bnet/callback',\n//   passport.authenticate('bnet', { failureRedirect: '/' }),\n//   function(req, res) {\n//     res.redirect('/');\n//   });"]},"metadata":{},"sourceType":"module"}