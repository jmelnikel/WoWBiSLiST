{"ast":null,"code":"import axios from 'axios';\nimport env from 'react-dotenv'; // const BnetStrategy = require('passport-bnet').Strategy;\n\nconst BNET_ID = env.BNET_ID;\nconst BNET_SECRET = env.BNET_SECRET; // Use the BnetStrategy within Passport.\n// passport.use(new BnetStrategy({\n//   clientID: BNET_ID,\n//   clientSecret: BNET_SECRET,\n//   callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n//   region: \"us\"\n// }, function(accessToken, refreshToken, profile, done) {\n//   return done(null, profile);\n// }));\n\nconst getToken = () => {\n  return axios.get(`https://us.battle.net/oauth/token`, {\n    auth: {\n      username: BNET_ID,\n      password: BNET_SECRET\n    },\n    params: {\n      grantType: 'client_credentials'\n    }\n  }).then(response => response);\n};\n\nexport default getToken;","map":{"version":3,"sources":["/Users/jm-laptop/Documents/Portfolio/wowbislist/src/api/OAuth.js"],"names":["axios","env","BNET_ID","BNET_SECRET","getToken","get","auth","username","password","params","grantType","then","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CAKA;;AACA,MAAMC,OAAO,GAAGD,GAAG,CAACC,OAApB;AACA,MAAMC,WAAW,GAAGF,GAAG,CAACE,WAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACrB,SAAOJ,KAAK,CAACK,GAAN,CAAW,mCAAX,EAA+C;AACpDC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAEL,OADN;AAEJM,MAAAA,QAAQ,EAAEL;AAFN,KAD8C;AAKpDM,IAAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAE;AADL;AAL4C,GAA/C,EAQJC,IARI,CAQCC,QAAQ,IAAIA,QARb,CAAP;AASD,CAVD;;AAYA,eAAeR,QAAf","sourcesContent":["import axios from 'axios';\nimport env from 'react-dotenv';\n\n\n\n\n// const BnetStrategy = require('passport-bnet').Strategy;\nconst BNET_ID = env.BNET_ID;\nconst BNET_SECRET = env.BNET_SECRET;\n\n// Use the BnetStrategy within Passport.\n// passport.use(new BnetStrategy({\n//   clientID: BNET_ID,\n//   clientSecret: BNET_SECRET,\n//   callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n//   region: \"us\"\n// }, function(accessToken, refreshToken, profile, done) {\n//   return done(null, profile);\n// }));\n\n\nconst getToken = () => {\n  return axios.get(`https://us.battle.net/oauth/token`, {\n    auth: {\n      username: BNET_ID,\n      password: BNET_SECRET,\n    },\n    params: {\n      grantType: 'client_credentials',\n    }\n  }).then(response => response);\n};\n\nexport default getToken;"]},"metadata":{},"sourceType":"module"}