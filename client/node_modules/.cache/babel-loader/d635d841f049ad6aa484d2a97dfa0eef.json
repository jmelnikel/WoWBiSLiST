{"ast":null,"code":"// import axios from 'axios';\nimport passport from 'passport';\n\nconst BnetStrategy = require('passport-bnet').Strategy; // import env from 'react-dotenv';\n\n\nconst BNET_ID = process.env.BNET_ID;\nconst BNET_SECRET = process.env.BNET_SECRET; // const getAuthToken = async () => {\n//   try {\n//     return await axios.get(baseUrl);\n//     passport.use(new BnetStrategy({\n//       clientID: BNET_ID,\n//       clientSecret: BNET_SECRET,\n//       callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n//       region: \"us\"\n//     }, function(accessToken, refreshToken, profile, done) {\n//       return done(null, profile);\n//     }));\n//   } catch (error) {\n//     if (error.response) {\n//       throw new Error(`HTTP error in OAuth.js! Response status: ${error.response.status}`);\n//     } else if (error.request) {\n//       throw new Error(`HTTP error in OAuth.js! Request: ${error.request}`);\n//     } else {\n//       throw new Error(`HTTP error in OAuth.js! Message: ${error.message}`);\n//     }\n//   }\n// };\n// export default getAuthToken;\n// const bodyParser = require(\"body-parser\");\n// const cors = require(\"cors\");\n\npassport.use(new BnetStrategy({\n  clientID: BNET_ID,\n  clientSecret: BNET_SECRET,\n  callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n  region: \"us\"\n}, function (accessToken, refreshToken, profile, done) {\n  return done(null, profile);\n}));\napp.get('/auth/bnet', passport.authenticate('bnet'));\napp.get('/auth/bnet/callback', passport.authenticate('bnet', {\n  failureRedirect: '/'\n}), function (req, res) {\n  console.log(\"this is firing\");\n  res.redirect('/');\n});","map":{"version":3,"sources":["/Users/jm-laptop/Documents/Portfolio/wowbislist/src/api/OAuth.js"],"names":["passport","BnetStrategy","require","Strategy","BNET_ID","process","env","BNET_SECRET","use","clientID","clientSecret","callbackURL","region","accessToken","refreshToken","profile","done","app","get","authenticate","failureRedirect","req","res","console","log","redirect"],"mappings":"AAAA;AACA,OAAOA,QAAP,MAAqB,UAArB;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,QAA9C,C,CACA;;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYF,OAA5B;AACA,MAAMG,WAAW,GAAGF,OAAO,CAACC,GAAR,CAAYC,WAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;;AAEAP,QAAQ,CAACQ,GAAT,CAAa,IAAIP,YAAJ,CAAiB;AAC5BQ,EAAAA,QAAQ,EAAEL,OADkB;AAE5BM,EAAAA,YAAY,EAAEH,WAFc;AAG5BI,EAAAA,WAAW,EAAE,2CAHe;AAI5BC,EAAAA,MAAM,EAAE;AAJoB,CAAjB,EAKV,UAASC,WAAT,EAAsBC,YAAtB,EAAoCC,OAApC,EAA6CC,IAA7C,EAAmD;AACpD,SAAOA,IAAI,CAAC,IAAD,EAAOD,OAAP,CAAX;AACD,CAPY,CAAb;AAWAE,GAAG,CAACC,GAAJ,CAAQ,YAAR,EACElB,QAAQ,CAACmB,YAAT,CAAsB,MAAtB,CADF;AAGAF,GAAG,CAACC,GAAJ,CAAQ,qBAAR,EACElB,QAAQ,CAACmB,YAAT,CAAsB,MAAtB,EAA8B;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAA9B,CADF,EAEE,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAF,EAAAA,GAAG,CAACG,QAAJ,CAAa,GAAb;AACD,CALH","sourcesContent":["// import axios from 'axios';\nimport passport from 'passport';\nconst BnetStrategy = require('passport-bnet').Strategy;\n// import env from 'react-dotenv';\nconst BNET_ID = process.env.BNET_ID;\nconst BNET_SECRET = process.env.BNET_SECRET;\n\n// const getAuthToken = async () => {\n//   try {\n//     return await axios.get(baseUrl);\n//     passport.use(new BnetStrategy({\n//       clientID: BNET_ID,\n//       clientSecret: BNET_SECRET,\n//       callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n//       region: \"us\"\n//     }, function(accessToken, refreshToken, profile, done) {\n//       return done(null, profile);\n//     }));\n//   } catch (error) {\n//     if (error.response) {\n//       throw new Error(`HTTP error in OAuth.js! Response status: ${error.response.status}`);\n//     } else if (error.request) {\n//       throw new Error(`HTTP error in OAuth.js! Request: ${error.request}`);\n//     } else {\n//       throw new Error(`HTTP error in OAuth.js! Message: ${error.message}`);\n//     }\n//   }\n// };\n\n// export default getAuthToken;\n\n\n\n// const bodyParser = require(\"body-parser\");\n// const cors = require(\"cors\");\n\npassport.use(new BnetStrategy({\n  clientID: BNET_ID,\n  clientSecret: BNET_SECRET,\n  callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n  region: \"us\"\n}, function(accessToken, refreshToken, profile, done) {\n  return done(null, profile);\n}));\n\n\n\napp.get('/auth/bnet',\n  passport.authenticate('bnet'));\n\napp.get('/auth/bnet/callback',\n  passport.authenticate('bnet', { failureRedirect: '/' }),\n  function(req, res) {\n    console.log(\"this is firing\")\n    res.redirect('/');\n  });"]},"metadata":{},"sourceType":"module"}