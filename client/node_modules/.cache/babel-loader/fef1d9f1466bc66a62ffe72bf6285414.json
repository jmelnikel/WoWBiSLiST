{"ast":null,"code":"// import axios from 'axios';\nimport passport from 'passport';\n\nconst BnetStrategy = require('passport-bnet').Strategy;\n\nimport env from 'react-dotenv';\nconst BNET_ID = env.BNET_ID;\nconst BNET_SECRET = env.BNET_SECRET;\n\nconst getAuthToken = async () => {\n  try {\n    // return await axios.get(baseUrl);\n    passport.use(new BnetStrategy({\n      clientID: BNET_ID,\n      clientSecret: BNET_SECRET,\n      callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n      region: \"us\"\n    }, function (accessToken, refreshToken, profile, done) {\n      return done(null, profile);\n    }));\n  } catch (error) {\n    if (error.response) {\n      throw new Error(`HTTP error in OAuth.js! Response status: ${error.response.status}`);\n    } else if (error.request) {\n      throw new Error(`HTTP error in OAuth.js! Request: ${error.request}`);\n    } else {\n      throw new Error(`HTTP error in OAuth.js! Message: ${error.message}`);\n    }\n  }\n};\n\nexport default getAuthToken; // const bodyParser = require(\"body-parser\");\n// const cors = require(\"cors\");\n// passport.use(new BnetStrategy({\n//   clientID: BNET_ID,\n//   clientSecret: BNET_SECRET,\n//   callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n//   region: \"us\"\n// }, function(accessToken, refreshToken, profile, done) {\n//   return done(null, profile);\n// }));\n// app.get('/auth/bnet',\n//   passport.authenticate('bnet'));\n// app.get('/auth/bnet/callback',\n//   passport.authenticate('bnet', { failureRedirect: '/' }),\n//   function(req, res) {\n//     res.redirect('/');\n//   });","map":{"version":3,"sources":["/Users/jm-laptop/Documents/Portfolio/wowbislist/src/api/OAuth.js"],"names":["passport","BnetStrategy","require","Strategy","env","BNET_ID","BNET_SECRET","getAuthToken","use","clientID","clientSecret","callbackURL","region","accessToken","refreshToken","profile","done","error","response","Error","status","request","message"],"mappings":"AAAA;AACA,OAAOA,QAAP,MAAqB,UAArB;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,QAA9C;;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,MAAMC,OAAO,GAAGD,GAAG,CAACC,OAApB;AACA,MAAMC,WAAW,GAAGF,GAAG,CAACE,WAAxB;;AAEA,MAAMC,YAAY,GAAG,YAAY;AAC/B,MAAI;AACF;AACAP,IAAAA,QAAQ,CAACQ,GAAT,CAAa,IAAIP,YAAJ,CAAiB;AAC5BQ,MAAAA,QAAQ,EAAEJ,OADkB;AAE5BK,MAAAA,YAAY,EAAEJ,WAFc;AAG5BK,MAAAA,WAAW,EAAE,2CAHe;AAI5BC,MAAAA,MAAM,EAAE;AAJoB,KAAjB,EAKV,UAASC,WAAT,EAAsBC,YAAtB,EAAoCC,OAApC,EAA6CC,IAA7C,EAAmD;AACpD,aAAOA,IAAI,CAAC,IAAD,EAAOD,OAAP,CAAX;AACD,KAPY,CAAb;AAQD,GAVD,CAUE,OAAOE,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAM,IAAIC,KAAJ,CAAW,4CAA2CF,KAAK,CAACC,QAAN,CAAeE,MAAO,EAA5E,CAAN;AACD,KAFD,MAEO,IAAIH,KAAK,CAACI,OAAV,EAAmB;AACxB,YAAM,IAAIF,KAAJ,CAAW,oCAAmCF,KAAK,CAACI,OAAQ,EAA5D,CAAN;AACD,KAFM,MAEA;AACL,YAAM,IAAIF,KAAJ,CAAW,oCAAmCF,KAAK,CAACK,OAAQ,EAA5D,CAAN;AACD;AACF;AACF,CApBD;;AAsBA,eAAef,YAAf,C,CAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import axios from 'axios';\nimport passport from 'passport';\nconst BnetStrategy = require('passport-bnet').Strategy;\nimport env from 'react-dotenv';\nconst BNET_ID = env.BNET_ID;\nconst BNET_SECRET = env.BNET_SECRET;\n\nconst getAuthToken = async () => {\n  try {\n    // return await axios.get(baseUrl);\n    passport.use(new BnetStrategy({\n      clientID: BNET_ID,\n      clientSecret: BNET_SECRET,\n      callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n      region: \"us\"\n    }, function(accessToken, refreshToken, profile, done) {\n      return done(null, profile);\n    }));\n  } catch (error) {\n    if (error.response) {\n      throw new Error(`HTTP error in OAuth.js! Response status: ${error.response.status}`);\n    } else if (error.request) {\n      throw new Error(`HTTP error in OAuth.js! Request: ${error.request}`);\n    } else {\n      throw new Error(`HTTP error in OAuth.js! Message: ${error.message}`);\n    }\n  }\n};\n\nexport default getAuthToken;\n\n\n\n// const bodyParser = require(\"body-parser\");\n// const cors = require(\"cors\");\n\n// passport.use(new BnetStrategy({\n//   clientID: BNET_ID,\n//   clientSecret: BNET_SECRET,\n//   callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n//   region: \"us\"\n// }, function(accessToken, refreshToken, profile, done) {\n//   return done(null, profile);\n// }));\n\n\n\n// app.get('/auth/bnet',\n//   passport.authenticate('bnet'));\n\n// app.get('/auth/bnet/callback',\n//   passport.authenticate('bnet', { failureRedirect: '/' }),\n//   function(req, res) {\n//     res.redirect('/');\n//   });"]},"metadata":{},"sourceType":"module"}