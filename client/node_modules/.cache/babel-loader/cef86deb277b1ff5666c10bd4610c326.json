{"ast":null,"code":"import axios from 'axios';\n\nconst getAuthToken = async baseUrl => {\n  try {\n    const response = await axios.get(baseUrl);\n    return response;\n  } catch (error) {\n    if (error.response) {\n      console.log(\"This is response.data\", error.response.data);\n      console.log(\"This is response.status\", error.response.status);\n      console.log(\"This is response.headers\", error.response.headers);\n    } else if (error.request) {\n      console.log(\"This is error.request\", error.request);\n    } else {\n      console.log('This is error.message', error.message);\n    }\n\n    console.log(\"This is error.config\", error.config);\n  }\n};\n\nexport default getAuthToken; // import env from 'react-dotenv';\n// import passport from 'passport';\n// const BnetStrategy = require('passport-bnet').Strategy;\n// const express = require(\"express\");\n// const bodyParser = require(\"body-parser\");\n// const cors = require(\"cors\");\n// const app = express();\n// const BNET_ID = env.BNET_ID;\n// const BNET_SECRET = env.BNET_SECRET;\n// passport.use(new BnetStrategy({\n//   clientID: BNET_ID,\n//   clientSecret: BNET_SECRET,\n//   callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n//   region: \"us\"\n// }, function(accessToken, refreshToken, profile, done) {\n//   return done(null, profile);\n// }));\n// const handleOnClick = () => {\n//   app.get('/auth/bnet',\n//     passport.authenticate('bnet'));\n// };\n// app.get('/auth/bnet',\n//   passport.authenticate('bnet'));\n// app.get('/auth/bnet/callback',\n//   passport.authenticate('bnet', { failureRedirect: '/' }),\n//   function(req, res) {\n//     res.redirect('/');\n//   });\n// app.get('/', (req, res) => {\n//   console.log()\n// })\n// app.listen(PORT, () => {\n//   console.log(`Server listening on port ${PORT}`);\n// });\n// export default handleOnClick;","map":{"version":3,"sources":["/Users/jm-laptop/Documents/Portfolio/wowbislist/src/api/OAuth.js"],"names":["axios","getAuthToken","baseUrl","response","get","error","console","log","data","status","headers","request","message","config"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAOC,OAAP,IAAmB;AACtC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAUF,OAAV,CAAvB;AACA,WAAOC,QAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,QAAIA,KAAK,CAACF,QAAV,EAAoB;AAClBG,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,KAAK,CAACF,QAAN,CAAeK,IAApD;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAK,CAACF,QAAN,CAAeM,MAAtD;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,KAAK,CAACF,QAAN,CAAeO,OAAvD;AACD,KAJD,MAIO,IAAIL,KAAK,CAACM,OAAV,EAAmB;AACxBL,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,KAAK,CAACM,OAA3C;AACD,KAFM,MAEA;AACLL,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,KAAK,CAACO,OAA3C;AACD;;AACDN,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAAK,CAACQ,MAA1C;AACD;AACF,CAhBD;;AAkBA,eAAeZ,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\n\nconst getAuthToken = async (baseUrl) => {\n  try {\n    const response = await axios.get(baseUrl);\n    return response;\n  } catch (error) {\n    if (error.response) {\n      console.log(\"This is response.data\", error.response.data);\n      console.log(\"This is response.status\", error.response.status);\n      console.log(\"This is response.headers\", error.response.headers);\n    } else if (error.request) {\n      console.log(\"This is error.request\", error.request);\n    } else {\n      console.log('This is error.message', error.message);\n    }\n    console.log(\"This is error.config\", error.config);\n  }\n};\n\nexport default getAuthToken;\n\n// import env from 'react-dotenv';\n// import passport from 'passport';\n// const BnetStrategy = require('passport-bnet').Strategy;\n// const express = require(\"express\");\n// const bodyParser = require(\"body-parser\");\n// const cors = require(\"cors\");\n// const app = express();\n\n\n\n\n// const BNET_ID = env.BNET_ID;\n// const BNET_SECRET = env.BNET_SECRET;\n\n// passport.use(new BnetStrategy({\n//   clientID: BNET_ID,\n//   clientSecret: BNET_SECRET,\n//   callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n//   region: \"us\"\n// }, function(accessToken, refreshToken, profile, done) {\n//   return done(null, profile);\n// }));\n\n// const handleOnClick = () => {\n//   app.get('/auth/bnet',\n//     passport.authenticate('bnet'));\n// };\n\n\n// app.get('/auth/bnet',\n//   passport.authenticate('bnet'));\n\n// app.get('/auth/bnet/callback',\n//   passport.authenticate('bnet', { failureRedirect: '/' }),\n//   function(req, res) {\n//     res.redirect('/');\n//   });\n\n\n\n// app.get('/', (req, res) => {\n//   console.log()\n// })\n\n// app.listen(PORT, () => {\n//   console.log(`Server listening on port ${PORT}`);\n// });\n// export default handleOnClick;"]},"metadata":{},"sourceType":"module"}