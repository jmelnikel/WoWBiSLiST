{"ast":null,"code":"// const env = require('react-dotenv');\nrequire('react-dotenv').config();\n\nconst axios = require('axios'); // const BnetStrategy = require('passport-bnet').Strategy;\n// const BNET_ID = env.BNET_ID;\n\n\nconst BNET_ID = process.env.BNET_ID; // const BNET_SECRET = env.BNET_SECRET;\n\nconst BNET_SECRET = process.env.BNET_SECRET; // Use the BnetStrategy within Passport.\n// passport.use(new BnetStrategy({\n//   clientID: BNET_ID,\n//   clientSecret: BNET_SECRET,\n//   callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n//   region: \"us\"\n// }, function(accessToken, refreshToken, profile, done) {\n//   return done(null, profile);\n// }));\n\nconst getToken = () => {\n  return axios.get(`https://us.battle.net/oauth/token`, {\n    auth: {\n      username: BNET_ID,\n      password: BNET_SECRET\n    },\n    params: {\n      grantType: 'client_credentials'\n    }\n  }).then(response => response);\n};\n\nexport default getToken;","map":{"version":3,"sources":["/Users/jm-laptop/Documents/Portfolio/wowbislist/src/api/OAuth.js"],"names":["require","config","axios","BNET_ID","process","env","BNET_SECRET","getToken","get","auth","username","password","params","grantType","then","response"],"mappings":"AAAA;AACAA,OAAO,CAAC,cAAD,CAAP,CAAwBC,MAAxB;;AACA,MAAMC,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB,C,CAEA;AACA;;;AACA,MAAMG,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYF,OAA5B,C,CACA;;AACA,MAAMG,WAAW,GAAGF,OAAO,CAACC,GAAR,CAAYC,WAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACrB,SAAOL,KAAK,CAACM,GAAN,CAAW,mCAAX,EAA+C;AACpDC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAEP,OADN;AAEJQ,MAAAA,QAAQ,EAAEL;AAFN,KAD8C;AAKpDM,IAAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAE;AADL;AAL4C,GAA/C,EAQJC,IARI,CAQCC,QAAQ,IAAIA,QARb,CAAP;AASD,CAVD;;AAYA,eAAeR,QAAf","sourcesContent":["// const env = require('react-dotenv');\nrequire('react-dotenv').config();\nconst axios = require('axios');\n\n// const BnetStrategy = require('passport-bnet').Strategy;\n// const BNET_ID = env.BNET_ID;\nconst BNET_ID = process.env.BNET_ID;\n// const BNET_SECRET = env.BNET_SECRET;\nconst BNET_SECRET = process.env.BNET_SECRET;\n\n// Use the BnetStrategy within Passport.\n// passport.use(new BnetStrategy({\n//   clientID: BNET_ID,\n//   clientSecret: BNET_SECRET,\n//   callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n//   region: \"us\"\n// }, function(accessToken, refreshToken, profile, done) {\n//   return done(null, profile);\n// }));\n\n\nconst getToken = () => {\n  return axios.get(`https://us.battle.net/oauth/token`, {\n    auth: {\n      username: BNET_ID,\n      password: BNET_SECRET,\n    },\n    params: {\n      grantType: 'client_credentials',\n    }\n  }).then(response => response);\n};\n\nexport default getToken;"]},"metadata":{},"sourceType":"module"}