{"ast":null,"code":"const env = require('react-dotenv');\n\nconst axios = require('axios'); // const env = require('react-dotenv').config();\n// const BnetStrategy = require('passport-bnet').Strategy;\n\n\nconst BNET_ID = env.BNET_ID; // const BNET_ID = process.env.BNET_ID\n\nconst BNET_SECRET = env.BNET_SECRET; // const BNET_SECRET = process.env.BNET_SECRET\n// Use the BnetStrategy within Passport.\n// passport.use(new BnetStrategy({\n//   clientID: BNET_ID,\n//   clientSecret: BNET_SECRET,\n//   callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n//   region: \"us\"\n// }, function(accessToken, refreshToken, profile, done) {\n//   return done(null, profile);\n// }));\n\nconst getToken = () => {\n  return axios.get(`https://us.battle.net/oauth/token`, {\n    auth: {\n      username: BNET_ID,\n      password: BNET_SECRET\n    },\n    params: {\n      grant_type: 'client_credentials'\n    }\n  }).then(response => response);\n};\n\nexport default getToken;","map":{"version":3,"sources":["/Users/jm-laptop/Documents/Portfolio/wowbislist/src/api/OAuth.js"],"names":["env","require","axios","BNET_ID","BNET_SECRET","getToken","get","auth","username","password","params","grant_type","then","response"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB,C,CACA;AAEA;;;AACA,MAAME,OAAO,GAAGH,GAAG,CAACG,OAApB,C,CACA;;AACA,MAAMC,WAAW,GAAGJ,GAAG,CAACI,WAAxB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACrB,SAAOH,KAAK,CAACI,GAAN,CAAW,mCAAX,EAA+C;AACpDC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAEL,OADN;AAEJM,MAAAA,QAAQ,EAAEL;AAFN,KAD8C;AAKpDM,IAAAA,MAAM,EAAE;AACNC,MAAAA,UAAU,EAAE;AADN;AAL4C,GAA/C,EAQJC,IARI,CAQCC,QAAQ,IAAIA,QARb,CAAP;AASD,CAVD;;AAYA,eAAeR,QAAf","sourcesContent":["const env = require('react-dotenv');\nconst axios = require('axios');\n// const env = require('react-dotenv').config();\n\n// const BnetStrategy = require('passport-bnet').Strategy;\nconst BNET_ID = env.BNET_ID;\n// const BNET_ID = process.env.BNET_ID\nconst BNET_SECRET = env.BNET_SECRET;\n// const BNET_SECRET = process.env.BNET_SECRET\n\n// Use the BnetStrategy within Passport.\n// passport.use(new BnetStrategy({\n//   clientID: BNET_ID,\n//   clientSecret: BNET_SECRET,\n//   callbackURL: \"https://localhost:3000/auth/bnet/callback\",\n//   region: \"us\"\n// }, function(accessToken, refreshToken, profile, done) {\n//   return done(null, profile);\n// }));\n\n\nconst getToken = () => {\n  return axios.get(`https://us.battle.net/oauth/token`, {\n    auth: {\n      username: BNET_ID,\n      password: BNET_SECRET,\n    },\n    params: {\n      grant_type: 'client_credentials',\n    }\n  }).then(response => response)\n}\n\nexport default getToken;"]},"metadata":{},"sourceType":"module"}